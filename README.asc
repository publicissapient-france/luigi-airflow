# Execution Environments

## Preamble

These tools and instructions aims to get `Luigi` and `Airflow` complete
working environments easily.

## Pre-requisites

- Docker and docker compose
- Nginx

## Airflow

There are three main ways to setup airflow, `Sequential Executor`, `Local Executor`
and `Celery Executor`.

For all of these, please first create a directory that will be the place where you
will place your DAGs source files :

```
export AIRFLOW_DAGS=$HOME/docker/volumes/airflow-dags
mkdir -p $AIRFLOW_DAGS
```

### Airflow - Sequential Executor

```
docker run -d -p 8079:8080 -v $AIRFLOW_DAGS:\
/usr/local/airflow/dags --name airflow-seq puckel/docker-airflow
```

Go to http://localhost:8079 to check whether airflow runs properly.

## Reverse proxies for better experience

To get a better semantic allowing to experiment the various webserver without having
to remember what localhost:8079 localhost:8078 and localhost:8077 are matching to,
 we suggest to use a reverse proxy to fake local hostnames. In these instructions, we
are going to build it with `/etc/hosts` file and _nginx_.

### Reverse proxies - /etc/hosts

- `sudo vim /etc/hosts`, add the line `127.0.0.1 airflow-seq` to it and then save it
- `sudo service networking restart`

### Reverse proxies - nginx

- `sudo apt install nginx`
- `sudo vim /etc/nginx/conf.d/proxy.conf`
- Write the following content in it :
```
proxy_redirect          off;
proxy_set_header        Host            $host;
proxy_set_header        X-Real-IP       $remote_addr;
proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
client_max_body_size    10m;
client_body_buffer_size 128k;
client_header_buffer_size 64k;
proxy_connect_timeout   90;
proxy_send_timeout      90;
proxy_read_timeout      90;
proxy_buffer_size   16k;
proxy_buffers       32   16k;
proxy_busy_buffers_size 64k;
```

- Then configure the proxy server :
```
sudo mkdir -p /etc/nginx/backup/sites-enabled
sudo mv /etc/nginx/sites-enabled/default /etc/nginx/backup/sites-enabled/default
sudo vim /etc/nginx/sites-enabled/default
```

- Add the following content to it :
```
server {
        listen   80;
        server_name     airflow-seq;
        location / {
                proxy_pass      http://localhost:8079/;
        }
}
```
- Then reload the nginx service with `sudo service nginx reload`
